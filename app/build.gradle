apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

allprojects {
    repositories {
        google()
        maven { url 'https://jitpack.io' }
        maven { url 'https://repo1.maven.org/maven2' }
    }
}

android {
    compileSdk 34
    defaultConfig {
        applicationId "net.samvankooten.finnstickers"
        minSdkVersion 21
        targetSdkVersion 34
        versionName '2.3.8'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 55
        ndk {
            /*
             * Sceneform is available for the following ABIs:
             * 'arm64-v8a', 'armeabi-v7a', 'x86_64' and 'x86'.
             * Your application should include the ABIs most appropriate to
             * minimize APK size. Listing 'arm64-v8a' is recommended.
             *
             * The sample app includes two ABIs:
             * 1. 'arm64-v8a' to run on devices
             * 2. 'x86' to run in the Android emulator
             *
             * Using App Bundles means each phone gets only its own ABI, so we can
             * aim for compatibility rather than apk size
             */
            abiFilters 'arm64-v8a', 'x86', 'armeabi-v7a', 'x86_64'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField("String", "BUILD_TIME", "\"" + System.currentTimeMillis().toString() + "\"")
        }
        debug {
            versionNameSuffix "-dev"
            buildConfigField("String", "BUILD_TIME", "\"" + System.currentTimeMillis().toString() + "\"")
        }
        noMinify {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            buildConfigField("String", "BUILD_TIME", "\"" + System.currentTimeMillis().toString() + "\"")
        }
        minifyDebug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField("String", "BUILD_TIME", "\"" + System.currentTimeMillis().toString() + "\"")
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/proguard/androidx-annotations.pro']
        }
    }
    namespace 'net.samvankooten.finnstickers'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.6'
    implementation 'androidx.core:core:1.10.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.1'
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.preference:preference:1.2.1'
    implementation 'com.google.android.material:material:1.9.0'

    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.firebase:firebase-messaging:23.2.1'

    //for lifecycle and LiveData and ViewModel
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.6.1"

    implementation "androidx.work:work-runtime:2.8.1"

    // Provides ARCore Session and related resources.
    implementation 'com.google.ar:core:1.39.0'
    // Provides ArFragment, and other UX resources.
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.17.1'

    api(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    api("com.squareup.okhttp3:okhttp")

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'

    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.16.0'

//    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.1'
    implementation 'com.github.svank:StfalconImageViewer:1.0.1-custom'

    // This is a dependency of StFalconImageViewer. After a gradle update, listing this here
    // seems to be necessary or else the PhotoView class can't be found. (paste shruggie here)
    implementation 'com.github.chrisbanes:PhotoView:2.2.0'

    implementation 'com.github.AppIntro:AppIntro:v5.1.0'

    implementation 'androidx.media3:media3-exoplayer:1.1.1'
    implementation 'androidx.media3:media3-ui:1.1.1'

    implementation ('io.github.waynejo:androidndkgif:1.0.1')

    implementation 'com.github.martin-stone:hsv-alpha-color-picker-android:3.1.0'

    // This seems to be required to avoid build errors
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.ar.sceneform.plugin'

sceneform.asset('sampledata/cowwy_low_poly.obj',
        'default',
        'sampledata/cowwy_low_poly.sfa',
        'src/main/assets/cowwy_low_poly')

sceneform.asset('sampledata/finn_low_poly.obj',
        'default',
        'sampledata/finn_low_poly.sfa',
        'src/main/assets/finn_low_poly')
