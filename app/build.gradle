apply plugin: 'com.android.application'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

allprojects {
    repositories {
        maven { url 'https://maven.google.com' }
        maven { url 'https://jitpack.io' }
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "net.samvankooten.finnstickers"
        minSdkVersion 21
        targetSdkVersion 28
        versionName '2.1'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        versionCode 13
        ndk {
            /*
             * Sceneform is available for the following ABIs:
             * 'arm64-v8a', 'armeabi-v7a', 'x86_64' and 'x86'.
             * Your application should include the ABIs most appropriate to
             * minimize APK size. Listing 'arm64-v8a' is recommended.
             *
             * The sample app includes two ABIs:
             * 1. 'arm64-v8a' to run on devices
             * 2. 'x86' to run in the Android emulator
             *
             * Using App Bundles means each phone gets only its own ABI, so we can
             * aim for compatibility rather than apk size
             */
            abiFilters 'arm64-v8a', 'x86', 'armeabi-v7a', 'x86_64'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core:1.0.1'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    // I'm not using these two directly, but it complains about version mismatches if I don't
    // have these two lines. I think these libraries are being pulled in as dependencies by something.
    implementation 'androidx.media:media:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-appindexing:17.1.0'
    testImplementation 'junit:junit:4.12'

    //for lifecycle and LiveData and ViewModel
    def lifecycle_version = '2.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"

    // Provides ARCore Session and related resources.
    implementation 'com.google.ar:core:1.6.0'
    // Provides ArFragment, and other UX resources.
    implementation 'com.google.ar.sceneform.ux:sceneform-ux:1.6.0'

    implementation 'com.github.stfalcon:frescoimageviewer:0.5.0'
    implementation 'com.facebook.fresco:fresco:1.10.0'
    implementation 'com.facebook.fresco:animated-gif:1.11.0'

    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation 'com.google.android.gms:play-services-oss-licenses:16.0.2'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.ar.sceneform.plugin'

sceneform.asset('sampledata/cowwy_low_poly.obj',
        'default',
        'sampledata/cowwy_low_poly.sfa',
        'src/main/assets/cowwy_low_poly')


sceneform.asset('sampledata/finn_low_poly.obj',
        'default',
        'sampledata/finn_low_poly.sfa',
        'src/main/assets/finn_low_poly')